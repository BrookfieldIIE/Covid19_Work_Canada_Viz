scale_y_continuous(limits = c(0,100),breaks = c(0,25,50,75,100),labels=c(str_wrap("Never exposed",7),
str_wrap("Exposed once a year",7),
str_wrap("Exposed once a month",7),
str_wrap("Exposed once a week",7),
str_wrap("Exposed once a day",7))) +
annotate("segment",
x=66.75,
y=13.25,
xend=42,
yend=55,
colour = "#e24585",
linetype = "dotted") +
annotate("text",
x=42,
y=55,
colour = "#e24585",
label = "Delivery Couriers",
hjust = 1,
size = 9*0.352777778) +
annotate("segment",
x=78.75,
y=52.167,
xend=82,
yend=65,
colour = "#e24585",
linetype = "dotted") +
annotate("text",
x = 82,
y = 65,
colour = "#e24585",
label = "Bus Drivers",
hjust = 0,
size = 9*0.352777778)+
annotate("segment",
x=78.75,
y=25,
xend=63,
yend=77,
colour = "#e24585",
linetype = "dotted") +
annotate("text",
x=63,
y=77,
colour = "#e24585",
label = "Taxi/Uber Drivers",
hjust = 0,
size = 9*0.352777778)
graph <- config(layout(ggplotly(main.plot,tooltip=c("text"),showlegend=FALSE,showscale=FALSE),
legend = list(orientation = 'h'),
xaxis=list(fixedrange=TRUE),
yaxis=list(fixedrange=TRUE),
showlegend = FALSE),
displayModeBar=F)
graph$x$data[[4]]$textposition <- "middle left"
graph$x$data[[6]]$textposition <- "middle right"
graph$x$data[[8]]$textposition <- "middle left"
graph
}
else if(triggers=="Work From Home"){
work.styles.to.plot[,trigger.dum:="0"]
work.styles.to.plot[able.wfh>=0.55,trigger.dum:="1"]
main.plot <- ggplot(work.styles.to.plot,aes(`Physical Proximity`,`Exposed to Disease or Infections`)) +
BF.Base.Theme +
geom_point(aes(text=paste(str_sub(noc_title,start=5),
"<br>",
"Number of Workers:",
comma(signif(emp,3))
), size=emp,fill=trigger.dum,colour=trigger.dum),alpha=0.7) +
scale_fill_manual(values=c(alpha("#DD347A",0.3),alpha("#14365D",0.3))) +
scale_colour_manual(values=c("#DD347A","#14365D")) +
scale_x_continuous(limits = c(0,100),breaks=c(0,25,50,75,100),labels=c(str_wrap("Don't work near people",10),
str_wrap("Work with others, but not closely",10),
str_wrap("Slightly close e.g. Shared office",10),
str_wrap("Moderately close e.g. arms length",10),
str_wrap("Very close (near touching)",10))) +
scale_y_continuous(limits = c(0,100),breaks = c(0,25,50,75,100),labels=c(str_wrap("Never exposed",7),
str_wrap("Exposed once a year",7),
str_wrap("Exposed once a month",7),
str_wrap("Exposed once a week",7),
str_wrap("Exposed once a day",7)))
graph <- config(layout(ggplotly(main.plot,tooltip=c("text"),showlegend=FALSE,showscale=FALSE),
legend = list(orientation = 'h'),
xaxis=list(fixedrange=TRUE),
yaxis=list(fixedrange=TRUE),
showlegend = FALSE),
displayModeBar=F)
graph
}
else if(triggers=="Work From Home: Focus"){
work.styles.to.plot[,trigger.dum:="1"]
work.styles.to.plot[noc_title=="4412 Home support workers, housekeepers and related occupations",trigger.dum:="0"]
main.plot <- ggplot(work.styles.to.plot,aes(`Physical Proximity`,`Exposed to Disease or Infections`)) +
BF.Base.Theme +
geom_point(aes(text=paste(str_sub(noc_title,start=5),
"<br>",
"Number of Workers:",
comma(signif(emp,3))
), size=emp,fill=trigger.dum,colour=trigger.dum),alpha=0.7) +
scale_fill_manual(values=c(alpha("#DD347A",0.3),alpha("#14365D",0.1))) +
scale_colour_manual(values=c("#DD347A",alpha("#14365D",0.3))) +
scale_x_continuous(limits = c(0,100),breaks=c(0,25,50,75,100),labels=c(str_wrap("Don't work near people",10),
str_wrap("Work with others, but not closely",10),
str_wrap("Slightly close e.g. Shared office",10),
str_wrap("Moderately close e.g. arms length",10),
str_wrap("Very close (near touching)",10))) +
scale_y_continuous(limits = c(0,100),breaks = c(0,25,50,75,100),labels=c(str_wrap("Never exposed",7),
str_wrap("Exposed once a year",7),
str_wrap("Exposed once a month",7),
str_wrap("Exposed once a week",7),
str_wrap("Exposed once a day",7)))
graph <- config(layout(ggplotly(main.plot,tooltip=c("text"),showlegend=FALSE,showscale=FALSE),
legend = list(orientation = 'h'),
xaxis=list(fixedrange=TRUE),
yaxis=list(fixedrange=TRUE),
showlegend = FALSE),
displayModeBar=F)
graph
}
else if(triggers=="Older Folks"){
work.styles.to.plot[,trigger.dum:="0"]
work.styles.to.plot[share.risk>=0.1,trigger.dum:="1"]
main.plot <- ggplot(work.styles.to.plot,aes(`Physical Proximity`,`Exposed to Disease or Infections`)) +
BF.Base.Theme +
geom_point(aes(text=paste(str_sub(noc_title,start=5),
"<br>",
"Number of Workers:",
comma(signif(emp,3))
), size=emp,fill=trigger.dum,colour=trigger.dum),alpha=0.7) +
scale_fill_manual(values=c(alpha("#14365D",0.1),alpha("#DD347A",0.3))) +
scale_colour_manual(values=c(alpha("#14365D",0.3),"#DD347A")) +
scale_x_continuous(limits = c(0,100),breaks=c(0,25,50,75,100),labels=c(str_wrap("Don't work near people",10),
str_wrap("Work with others, but not closely",10),
str_wrap("Slightly close e.g. Shared office",10),
str_wrap("Moderately close e.g. arms length",10),
str_wrap("Very close (near touching)",10))) +
scale_y_continuous(limits = c(0,100),breaks = c(0,25,50,75,100),labels=c(str_wrap("Never exposed",7),
str_wrap("Exposed once a year",7),
str_wrap("Exposed once a month",7),
str_wrap("Exposed once a week",7),
str_wrap("Exposed once a day",7)))+
annotate("segment",
x=78.75,
y=52.167,
xend=82,
yend=65,
colour = "#e24585",
linetype = "dotted") +
annotate("text",
x = 82,
y = 65,
colour = "#e24585",
label = "Bus Drivers",
hjust = 0,
size = 9*0.352777778)+
annotate("segment",
x=78.75,
y=25,
xend=63,
yend=77,
colour = "#e24585",
linetype = "dotted") +
annotate("text",
x=63,
y=77,
colour = "#e24585",
label = "Taxi/Uber Drivers",
hjust = 0,
size = 9*0.352777778)
graph <- config(layout(ggplotly(main.plot,tooltip=c("text"),showlegend=FALSE,showscale=FALSE),
legend = list(orientation = 'h'),
xaxis=list(fixedrange=TRUE),
yaxis=list(fixedrange=TRUE),
showlegend = FALSE),
displayModeBar=F)
graph$x$data[[4]]$textposition <- "middle right"
graph$x$data[[6]]$textposition <- "middle left"
graph
}
else if(triggers=="Second order"){
main.plot <- ggplot(work.styles.to.plot,aes(`Physical Proximity`,`Exposed to Disease or Infections`)) +
BF.Base.Theme +
geom_point(aes(text=paste(str_sub(noc_title,start=5),
"<br>",
"Number of Workers:",
comma(signif(emp,3))
), size=emp),fill=alpha("#14365D",alpha=0.3),colour="#14365D",alpha=0.7) +
scale_x_continuous(limits = c(0,100),breaks=c(0,25,50,75,100),labels=c(str_wrap("Don't work near people",10),
str_wrap("Work with others, but not closely",10),
str_wrap("Slightly close e.g. Shared office",10),
str_wrap("Moderately close e.g. arms length",10),
str_wrap("Very close (near touching)",10))) +
scale_y_continuous(limits = c(0,100),breaks = c(0,25,50,75,100),labels=c(str_wrap("Never exposed",7),
str_wrap("Exposed once a year",7),
str_wrap("Exposed once a month",7),
str_wrap("Exposed once a week",7),
str_wrap("Exposed once a day",7)))
graph <- config(layout(ggplotly(main.plot,tooltip=c("text"),showlegend=FALSE,showscale=FALSE),
legend = list(orientation = 'h'),
xaxis=list(fixedrange=TRUE),
yaxis=list(fixedrange=TRUE),
showlegend = FALSE),
displayModeBar=F)
graph
}
else if(triggers=="Income Precarity"){
work.styles.to.plot[,trigger.dum:="0"]
work.styles.to.plot[MEDINC_TOT<=32554,trigger.dum:="1"]
main.plot <- ggplot(work.styles.to.plot,aes(`Physical Proximity`,`Exposed to Disease or Infections`)) +
BF.Base.Theme +
geom_point(aes(text=paste(str_sub(noc_title,start=5),
"<br>",
"Number of Workers:",
comma(signif(emp,3))
), size=emp,fill=trigger.dum,colour=trigger.dum),alpha=0.7) +
scale_fill_manual(values=c(alpha("#14365D",0.2),alpha("#DD347A",0.3))) +
scale_colour_manual(values=c(alpha("#14365D",0.3),"#DD347A")) +
scale_x_continuous(limits = c(0,100),breaks=c(0,25,50,75,100),labels=c(str_wrap("Don't work near people",10),
str_wrap("Work with others, but not closely",10),
str_wrap("Slightly close e.g. Shared office",10),
str_wrap("Moderately close e.g. arms length",10),
str_wrap("Very close (near touching)",10))) +
scale_y_continuous(limits = c(0,100),breaks = c(0,25,50,75,100),labels=c(str_wrap("Never exposed",7),
str_wrap("Exposed once a year",7),
str_wrap("Exposed once a month",7),
str_wrap("Exposed once a week",7),
str_wrap("Exposed once a day",7)))
graph <- config(layout(ggplotly(main.plot,tooltip=c("text"),showlegend=FALSE,showscale=FALSE),
legend = list(orientation = 'h'),
xaxis=list(fixedrange=TRUE),
yaxis=list(fixedrange=TRUE),
showlegend = FALSE),
displayModeBar=F)
graph
}
else if(triggers=="Part Time Workers"){
work.styles.to.plot[,trigger.dum:="0"]
work.styles.to.plot[share.part>=0.5,trigger.dum:="1"]
main.plot <- ggplot(work.styles.to.plot,aes(`Physical Proximity`,`Exposed to Disease or Infections`)) +
BF.Base.Theme +
geom_point(aes(text=paste(str_sub(noc_title,start=5),
"<br>",
"Number of Workers:",
comma(signif(emp,3))
), size=emp,fill=trigger.dum,colour=trigger.dum),alpha=0.7) +
scale_fill_manual(values=c(alpha("#14365D",0.1),alpha("#DD347A",0.3))) +
scale_colour_manual(values=c(alpha("#14365D",0.3),"#DD347A")) +
scale_x_continuous(limits = c(0,100),breaks=c(0,25,50,75,100),labels=c(str_wrap("Don't work near people",10),
str_wrap("Work with others, but not closely",10),
str_wrap("Slightly close e.g. Shared office",10),
str_wrap("Moderately close e.g. arms length",10),
str_wrap("Very close (near touching)",10))) +
scale_y_continuous(limits = c(0,100),breaks = c(0,25,50,75,100),labels=c(str_wrap("Never exposed",7),
str_wrap("Exposed once a year",7),
str_wrap("Exposed once a month",7),
str_wrap("Exposed once a week",7),
str_wrap("Exposed once a day",7)))
graph <- config(layout(ggplotly(main.plot,tooltip=c("text"),showlegend=FALSE,showscale=FALSE),
legend = list(orientation = 'h'),
xaxis=list(fixedrange=TRUE),
yaxis=list(fixedrange=TRUE),
showlegend = FALSE),
displayModeBar=F)
graph
}
else if(triggers=="Visible Minority Workers"){
work.styles.to.plot[,trigger.dum:="0"]
work.styles.to.plot[Share.vm>=0.21,trigger.dum:="1"]
main.plot <- ggplot(work.styles.to.plot,aes(`Physical Proximity`,`Exposed to Disease or Infections`)) +
BF.Base.Theme +
geom_point(aes(text=paste(str_sub(noc_title,start=5),
"<br>",
"Number of Workers:",
comma(signif(emp,3))
), size=emp,fill=trigger.dum,colour=trigger.dum),alpha=0.7) +
scale_fill_manual(values=c(alpha("#14365D",0.1),alpha("#DD347A",0.3))) +
scale_colour_manual(values=c(alpha("#14365D",0.3),"#DD347A")) +
scale_x_continuous(limits = c(0,100),breaks=c(0,25,50,75,100),labels=c(str_wrap("Don't work near people",10),
str_wrap("Work with others, but not closely",10),
str_wrap("Slightly close e.g. Shared office",10),
str_wrap("Moderately close e.g. arms length",10),
str_wrap("Very close (near touching)",10))) +
scale_y_continuous(limits = c(0,100),breaks = c(0,25,50,75,100),labels=c(str_wrap("Never exposed",7),
str_wrap("Exposed once a year",7),
str_wrap("Exposed once a month",7),
str_wrap("Exposed once a week",7),
str_wrap("Exposed once a day",7)))
graph <- config(layout(ggplotly(main.plot,tooltip=c("text"),showlegend=FALSE,showscale=FALSE),
legend = list(orientation = 'h'),
xaxis=list(fixedrange=TRUE),
yaxis=list(fixedrange=TRUE),
showlegend = FALSE),
displayModeBar=F)
graph
}
}
final.plot <- function(occupation_focus=""){
work.styles.to.plot[,occ.focus:="0"]
work.styles.to.plot[str_sub(noc_title,5)==occupation_focus,occ.focus:="1"]
main.plot <- ggplot(work.styles.to.plot,aes(`Physical Proximity`,`Exposed to Disease or Infections`)) +
BF.Base.Theme +
geom_point(aes(text=paste(str_sub(noc_title,start=5),
"<br>",
"Number of Workers:",
comma(signif(emp,3))
), size=emp,fill=occ.focus,colour=occ.focus),alpha=0.7) +
scale_fill_manual(values=c(alpha("#14365D",0.5),alpha("#DD347A",0.8))) +
scale_colour_manual(values=c(alpha("#14365D",0.5),"#DD347A")) +
scale_x_continuous(limits = c(0,100),breaks=c(0,25,50,75,100),labels=c(str_wrap("Don't work near people",20),
str_wrap("Work with others, but not closely",20),
str_wrap("Slightly close e.g. Shared office",20),
str_wrap("Moderately close e.g. arms length",20),
str_wrap("Very close (near touching)",20))) +
scale_y_continuous(limits = c(0,100),breaks = c(0,25,50,75,100),labels=c(str_wrap("Never exposed",20),
str_wrap("Exposed once a year",20),
str_wrap("Exposed once a month",20),
str_wrap("Exposed once a week",20),
str_wrap("Exposed once a day",20)))
graph <- config(layout(ggplotly(main.plot,tooltip=c("text"),showlegend=FALSE,showscale=FALSE),
legend = list(orientation = 'h'),
xaxis=list(fixedrange=TRUE),
yaxis=list(fixedrange=TRUE),
showlegend = FALSE),
displayModeBar=F)
graph
}
install.packages("scrollytelling")
install.packages("devtools")
library(devtools)
install_github("scrollytell")
install_github("https://github.com/JohnCoene/scrollytell")
install_github("http://github.com/JohnCoene/scrollytell")
install_github("https://github.com/JohnCoene/scrollytell/")
install_github("https://github.com/JohnCoene/scrollytell")
help(install_github)
install_github("JohnCoene/scrollytell")
install_github("https://github.com/statistiekcbs/scrollytell")
install.packages(c("backports", "callr", "cli", "curl", "data.table", "directlabels", "doParallel", "fansi", "foreach", "fs", "ggplot2", "glue", "httr", "iterators", "jsonlite", "mapproj", "mime", "openssl", "pillar", "pkgconfig", "plyr", "processx", "ps", "quadprog", "R.methodsS3", "R.oo", "R.utils", "R6", "Rcpp", "Rttf2pt1", "scales", "selectr", "stringi", "sys", "tibble", "vctrs", "XML", "xml2"))
install_github("https://github.com/statistiekcbs/scrollytell")
library(devtools)
install_github("https://github.com/statistiekcbs/scrollytell")
install.packages('shiny')
install.packages('plotly')
library(ggplotly)
install.packages("ggplotly")
install.packages("dplyr")
install.packages("Rtools")
load("data/noc_2016_vis_processed.RDA")
library(data.table)
library(SDMTools)
library(stringr)
load("data/noc_2016_vis_processed.RDA")
View(noc.vis.2016)
load("data/noc_vis_2016.RDA")
View(noc.vis.2016)
noc.vis.2016 <- noc.vis.2016[GEO_NAME=="Toronto"]
load("data/noc_2016_vis.RDA")
load("data/noc_vis_2016.RDA")
unique(noc.vis.2016[,GEO_NAME])
vis.2016.full <- fread("data/big.csv")
vis.2016.full <- vis.2016.full[GEO_NAME=="Toronto"]
vis.2016.full <- fread("data/big.csv")
View(vis.2016.full)
library(data.table)
vismin <- fread("98-400-X2016356_English_CSV_data",skip=80100721,nrows=3482641)
vismin <- fread("data/98-400-X2016356_English_CSV_data.csv",skip=80100721,nrows=3482641)
library(data.table)
library(SDMTools)
library(stringr)
vismin <- fread("data/98-400-X2016356_English_CSV_data.csv",skip=80100721,nrows=3482641)
vismin <- fread("data/98-400-X2016356_English_CSV_data.csv")
unique(vismin[,GEO_NAME])
rm(vismin)
vismin <- fread("data/98-400-X2016356_English_CSV_data.csv",skip=80100721,nrows=3482641)
vismin <- vismin[V12==1&V21==1]
vismin[,OCC:=str_extract(V23,"[0-9]^{4}")]
unique(vismin[,OCC])
vismin[,OCC:=str_extract(V23,"^[0-9]{4}")]
unique(vismin[,OCC])
vismin <- vismin[nchar(OCC)==4]
vismin[,c("V11","V12","V13","V20","V21","V22"):=NULL]
unique(vismin[V9==2,V8])
vismin <- vismin[V9 %in% c(1,2)]
vismin[,c("V1","V2","V3","V4","V5","V6","V7"):=NULL]
save(vismin,file="vismin_toronto.RDA")
work.styles.to.plot.toronto <- work.styles.to.plot[,.(noc_title,NOC1610,able.wfh,`Exposed to Disease or Infections`,`Physical Proximity`,row)]
vismin_full <- vismin[V15==1 & V18==1]
partime_full <- vismin[V9==1 & V18==1]
age_full <- vismin[V9==1 & V15==1]
vismin_full[,c("V14","V15","V16","V17","V18","V19","V24","V25"):=NULL]
vismin_full[V9==1,V8:="ALL"]
vismin_full[V9==2,V8:="VISMIN"]
vismin_full[,c("V9","V10"):=NULL]
View(vismin_full)
names(vismin_full) <- c("CAT_VISMIN","NOC","emp","MED.INC","AVG.INC")
names(vismin_full) <- c("CAT_VISMIN","NOC","emp","MED.INC","AVG.INC","NOC_4")
vismin_wide <- dcast(vismin_full,NOC ~ CAT_VISMIN,value.var=c("emp","MED.INC","AVG.INC"))
View(vismin_wide)
unique(partime_full[,V14])
unique(age_full[,V17])
age_full[,c("V8","V9","V10","V14","V15","V16","V24","V25"):=NULL]
age_full <- age_full[V18%in%c(1,4)]
age_full[,c("V18","V19","V27","V28"):=NULL]
names(age_full) <- c("Age","NOC","TOTAL","NOC_4")
age_full[,Age:="Older folks"]
age_full[Age=="Total - Age",Age:="Everyone"]
age_wide <- dcast(age_full,NOC ~ Age,value.var=c("TOTAL"))
View(age_full)
View(age_full)
age_wide <- dcast(age_full,NOC ~ Age,value.var=c("TOTAL"),fun.aggregate = sum)age_full <- vismin[V9==1 & V15==1]
age_full <- vismin[V9==1 & V15==1]
age_full[,c("V8","V9","V10","V14","V15","V16","V24","V25"):=NULL]
age_full <- age_full[V18%in%c(1,4)]
age_full[,c("V18","V19","V27","V28"):=NULL]
names(age_full) <- c("Age","NOC","TOTAL","NOC_4")
age_full[Age=="Total - Age",Age:="Everyone"]
age_full[Age != "Everyone",Age:="Older folks"]
age_wide <- dcast(age_full,NOC ~ Age,value.var=c("TOTAL"))
View(age_wide)
age_full[Age=="Total - Age",Age:="Everyone"]
age_full[Age != "Everyone",Age:="Older"]
age_wide <- dcast(age_full,NOC ~ Age,value.var=c("TOTAL"))
View(age_wide)
View(partime_full)
partime_full[,c("V8","V9","V10","V17","V18","V19","V24","V25","V27","V28"):=NULL]
partime_full[V15%in%c(2,3),V14:="PARTTIME"]
parttime_full <- parttime_full[V15!=4]
parttime_full[V15==1,V14:="ALL_WORKERS"]
parttime_full[,c("V15","V16"):=NULL]
partime_full <- partime_full[V15!=4]
partime_full[V15==1,V14:="ALL_WORKERS"]
partime_full[,c("V15","V16"):=NULL]
View(partime_full)
vismin_wide <- dcast(vismin_full,NOC ~ WORKAC,value.var=c("TOTAL"),fun.aggregate=sum)
names(parttime_full) <- c("WORKAC","NOC","TOTAL","NOC_4")
vismin_wide <- dcast(vismin_full,NOC ~ WORKAC,value.var=c("TOTAL"),fun.aggregate=sum)
names(partime_full) <- c("WORKAC","NOC","TOTAL","NOC_4")
vismin_wide <- dcast(vismin_full,NOC ~ WORKAC,value.var=c("TOTAL"),fun.aggregate=sum)
vismin_wide <- dcast(partime_full,NOC ~ WORKAC,value.var=c("TOTAL"),fun.aggregate=sum)
vismin_wide <- dcast(vismin_full,NOC ~ CAT_VISMIN,value.var=c("emp","MED.INC","AVG.INC"))
partime_full[,c("V8","V9","V10","V17","V18","V19","V24","V25","V27","V28"):=NULL]
partime_full[V15%in%c(2,3),V14:="PARTTIME"]
partime_full <- partime_full[V15!=4]
partime_full[V15==1,V14:="ALL_WORKERS"]
partime_full[,c("V15","V16"):=NULL]
names(partime_full) <- c("WORKAC","NOC","TOTAL","NOC_4")
partime_wide <- dcast(partime_full,NOC ~ WORKAC,value.var=c("TOTAL"),fun.aggregate=sum)
View(vismin_wide)
setkey(work.styles.to.plot.toronto,noc_title)
setkey(vismin_wide,NOC)
work.styles.to.plot.toronto <- work.styles.to.plot.toronto[vismin_wide,nomatch=0]
View(work.styles.to.plot.toronto)
work.styles.to.plot.toronto <- work.styles.to.plot.toronto[age_wide,nomatch=0]
setkey(partime,NOC)
work.styles.to.plot.toronto <- work.styles.to.plot.toronto[partime_wide,nomatch=0]
vismin_full <- vismin[V15==1 & V18==1]
partime_full <- vismin[V9==1 & V18==1]
age_full <- vismin[V9==1 & V15==1]
work.styles.to.plot.toronto <- work.styles.to.plot[,.(noc_title,NOC1610,able.wfh,`Exposed to Disease or Infections`,`Physical Proximity`,row)]
vismin_full[,c("V14","V15","V16","V17","V18","V19","V24","V25"):=NULL]
vismin_full[V9==1,V8:="ALL"]
vismin_full[V9==2,V8:="VISMIN"]
vismin_full[,c("V9","V10"):=NULL]
names(vismin_full) <- c("CAT_VISMIN","NOC","emp","MED.INC","AVG.INC","NOC_4")
vismin_wide <- dcast(vismin_full,NOC ~ CAT_VISMIN,value.var=c("emp","MED.INC","AVG.INC"))
partime_full[,c("V8","V9","V10","V17","V18","V19","V24","V25","V27","V28"):=NULL]
partime_full[V15%in%c(2,3),V14:="PARTTIME"]
partime_full <- partime_full[V15!=4]
partime_full[V15==1,V14:="ALL_WORKERS"]
partime_full[,c("V15","V16"):=NULL]
names(partime_full) <- c("WORKAC","NOC","TOTAL","NOC_4")
partime_wide <- dcast(partime_full,NOC ~ WORKAC,value.var=c("TOTAL"),fun.aggregate=sum)
age_full[,c("V8","V9","V10","V14","V15","V16","V24","V25"):=NULL]
age_full <- age_full[V18%in%c(1,4)]
age_full[,c("V18","V19","V27","V28"):=NULL]
names(age_full) <- c("Age","NOC","TOTAL","NOC_4")
age_full[Age=="Total - Age",Age:="Everyone"]
age_full[Age != "Everyone",Age:="Older"]
age_wide <- dcast(age_full,NOC ~ Age,value.var=c("TOTAL"))
setkey(work.styles.to.plot.toronto,noc_title)
setkey(vismin_wide,NOC)
work.styles.to.plot.toronto <- work.styles.to.plot.toronto[vismin_wide,nomatch=0]
setkey(age_wide,NOC)
work.styles.to.plot.toronto <- work.styles.to.plot.toronto[age_wide,nomatch=0]
setkey(partime_wide,NOC)
work.styles.to.plot.toronto <- work.styles.to.plot.toronto[partime_wide,nomatch=0]
View(work.styles.to.plot.toronto)
work.styles.to.plot.toronto[,share.risk:=Older/Everyone]
work.styles.to.plot.toronto[,share.part:=PARTTIME/ALL_WORKERS]
work.styles.to.plot.toronto[,Share.vm:=emp_VISMIN/emp_ALL]
names(work.styles.to.plot)
names(work.styles.to.plot.toronto)
names(work.styles.to.plot.toronto) <- c("noc_title","NOC1610","able.wfh","Exposed to Disease or Infections","Physical Proximity","row","emp","emp_VISMIN",
"MEDINC_TOT","MEDINC_VM","AVGINC_TOT","AVGINC_VM","high.risk.65","Total_age",'ALL_WORKERS',"PARTTIME","share.risk","share.part","Share.vm")
save(work.styles.to.plot,file="Canada_wide_data.RDA")
work.styles.to.plot <- work.styles.to.plot.toronto
shiny::runApp()
work.styles.to.plot <- work.styles.to.plot.toronto
save(work.styles.to.plot,file="data_for_toronto.RDA")
runApp()
runApp()
runApp()
runApp()
runApp()
load("data/parttime.RDA")
View(parttime)
View(parttime)
library(data.table)
work.styles.to.plot[,composite_score:=sqrt(`Exposed to Disease or Infections`*`Physical Proximity`)]
View(work.styles.to.plot)
write.csv(work.styles.to.plot,file="work_styles_to_plot.csv")
work.styles.to.plot[,harmonic_mean:=2/((1/`Exposed to Disease or Infections`)+(1/`Physical Proximity`))]
write.csv(work.styles.to.plot,file="work_styles_to_plot.csv")
